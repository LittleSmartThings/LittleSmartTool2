/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package littlesmarttool2.GUI.components;

import java.io.IOException;
import java.util.concurrent.TimeoutException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;
import littlesmarttool2.comm.SerialController;
import littlesmarttool2.model.CameraModel;
import littlesmarttool2.model.IRCommand;
import littlesmarttool2.util.PulseDataRecorder;

/**
 *
 * @author Rasmus
 */
public class IRRecordForm extends javax.swing.JPanel {

    private final CameraModel model;
    private final PulseDataRecorder recorder;
    private final SerialController controller;
    private final int tempPosition;
    private int[] pulseData;
    private Timer statusTimer = new Timer(1000,null);
    /**
     * Creates new form IRRecordForm
     */
    public IRRecordForm(CameraModel model, SerialController controller, int tempPosition) {
        initComponents();
        this.model = model;
        recorder = new PulseDataRecorder(controller, tempPosition);
        this.tempPosition = tempPosition;
        this.controller = controller;
        modelLabel.setText(model.getIdentifier());
    }

    //TODO:
    /*
     * Backup pulsedata
     * Record pulses
     * Playback pulses
     * Restore old pulsedata
     */
    public IRCommand getIRCommand()
    {
        //TODO: Throw exception if pulseData empty?
        return new IRCommand(nameField.getText(), descriptionArea.getText(), new CameraModel[]{model}, pulseData, 10000, 1, 38);
    }
    
    private void doRecord()
    {
        boolean error = false;
        recorder.backupPulseData();
        try {
            pulseData = recorder.recordPulseData();
        } catch (IOException | TimeoutException ex) {
            error = true;
        }
        recorder.restorePulseData();
        
        recordButton.setEnabled(true);
        statusTimer.stop();
        
        if (error)
        {
            playButton.setEnabled(false);
            statusLabel.setText("Record error. Try again."); //Todo: better error message
        }
        else if (pulseData.length == 0)
        {
            playButton.setEnabled(false);
            statusLabel.setText("Record error. Nothing recorded.");
        }
        else
        {
            playButton.setEnabled(true);
            statusLabel.setText("Recorded OK");
        }
    }
    
    private void doPlayBack()
    {
        boolean error = false;
        recorder.backupPulseData();
        try {
            recorder.setPulseData(pulseData);
            controller.send("H;"+tempPosition, 5000);
        } catch (TimeoutException | IOException ex) {
            error = true;
        }
        
        recorder.restorePulseData();
        
        recordButton.setEnabled(true);
        playButton.setEnabled(true);
        statusTimer.stop();
        if (error)
            statusLabel.setText("Playback error. Try again");
        else
            statusLabel.setText("Done playing");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel3 = new javax.swing.JLabel();
        modelLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        recordButton = new javax.swing.JButton();
        playButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Camera Model");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 10);
        add(jLabel3, gridBagConstraints);

        modelLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        modelLabel.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        add(modelLabel, gridBagConstraints);

        jLabel5.setText("Command Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        add(nameField, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Record IR command");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(jLabel6, gridBagConstraints);

        jLabel7.setText("Command Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(jLabel7, gridBagConstraints);

        descriptionArea.setColumns(20);
        descriptionArea.setRows(3);
        jScrollPane1.setViewportView(descriptionArea);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        add(jScrollPane1, gridBagConstraints);

        jLabel8.setText("IR Sequence");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        add(jLabel8, gridBagConstraints);

        recordButton.setText("<html>&#9679; Record</html>");
        recordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recordButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(recordButton, gridBagConstraints);

        playButton.setText("<html>&#9658; Play</html>");
        playButton.setEnabled(false);
        playButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(playButton, gridBagConstraints);

        statusLabel.setText("Nothing recorded");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        add(statusLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void recordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recordButtonActionPerformed
        playButton.setEnabled(false);
        recordButton.setEnabled(false);
        statusTimer.stop();
        statusTimer = new Timer(500,new DotsListener(statusLabel, "Recording"));
        statusTimer.start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                doRecord();
            }
        }).start();
    }//GEN-LAST:event_recordButtonActionPerformed

    private void playButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playButtonActionPerformed
        playButton.setEnabled(false);
        recordButton.setEnabled(false);
        statusTimer.stop();
        statusTimer = new Timer(500,new DotsListener(statusLabel, "Playing"));
        statusTimer.start();
        new Thread(new Runnable() {
            @Override
            public void run() {
                doPlayBack();
            }
        }).start();
    }//GEN-LAST:event_playButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea descriptionArea;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton playButton;
    private javax.swing.JButton recordButton;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
